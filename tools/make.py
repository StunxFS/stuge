# (C) 2022 StunxFS. All rights reserved. Use of this source code is
# governed by an MIT license that can be found in the LICENSE file.

# Script used to generate a simple Makefile.

import glob, sys

import utils

DATA_OBJS = " ".join([dobj for dobj in glob.glob("src/data/*.o")])

CFILES = glob.glob("src/**/*.c", recursive=True) + glob.glob(
    "thirdparty/**/*.c", recursive=True)
CFILES.sort()
OBJS = [cfile.replace(".c", ".o") for cfile in CFILES]
OBJS_LIST = ' '.join([obj for obj in OBJS])

INCS = " ".join(
    ["-I/usr/include/libxml2", "-I/usr/include/lua5.3", "-Ithirdparty/"])
LINKS = " ".join(
    ["-lxml2", "-llua5.3", "-lglfw", "-lrt", "-lm", "-ldl", "-pthread"])

with open("Makefile", "w") as mf:
    mf.write("# File generated by 'tools/make.py'\n")
    mf.write(
        "# Please, do not edit this file. Your changes may be overwritten.\n\n"
    )
    mf.write("CC := gcc\n")
    mf.write("GAME_NAME := bin/stuge\n")
    mf.write("\n")
    mf.write("all: build\n")
    mf.write("\n")
    mf.write("generate_asset_headers:\n")
    mf.write("	python3 tools/asset2c.py\n")
    mf.write("\n")
    mf.write(f"build: generate_asset_headers {OBJS_LIST}\n")
    mf.write(
        f"	$(CC) {DATA_OBJS} {OBJS_LIST}  libraylib.a {LINKS} -o $(GAME_NAME)\n\n"
    )

    for i, cfile in enumerate(CFILES):
        objfile = OBJS[i]
        mf.write(f"{objfile}:\n")
        mf.write(f"	$(CC) {INCS} -c -o {objfile} {cfile}\n\n")

    mf.write("clean:\n")
    for objfile in OBJS:
        mf.write(f"	rm {objfile}\n")

res = utils.execute("make", *sys.argv[1:])
if res.exit_code != 0:
    print(res.err, sys.stderr)
